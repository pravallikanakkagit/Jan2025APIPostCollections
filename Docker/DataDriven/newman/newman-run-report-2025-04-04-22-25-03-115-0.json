{
  "collection": {
    "_": {
      "postman_id": "acca90e2-bf4c-44bf-9171-f2dbfac6be87",
      "exporter_id": "42254602"
    },
    "item": [
      {
        "id": "7d759b01-a542-4447-9556-27d9b735361c",
        "name": "CreateUserWithTestData",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \r\n    //name,status and gender are coming from csv file(myuser.csv)\r\n    \r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "28123e20-d0d7-4a3b-a8c4-2d8ac905f87b",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 201\", function () {\r",
                "    pm.response.to.have.status(201);\r",
                "});\r",
                "\r",
                "//assertions\r",
                "pm.test(\"Check user response data\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));// here we used data variable\r",
                "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                "\r",
                "    //fetch the email\r",
                "    const rawBody= pm.request.body.raw;//json string\r",
                "\r",
                "    //convert json to javascript object\r",
                "    const requestBody= JSON.parse(rawBody);\r",
                "    const email=requestBody.email;\r",
                "    console.log(\"expected email==>\" + email);\r",
                "    pm.expect(jsonData.email).to.eql(email);\r",
                "});\r",
                "\r",
                "\r",
                "const response=pm.response.json();\r",
                "const userID=response.id;\r",
                "pm.variables.set(\"user_id\",userID);\r",
                ""
              ],
              "_lastExecutionId": "71b7a9f9-6563-447d-853d-f7dbe5a728c8"
            }
          }
        ]
      },
      {
        "id": "37b71ada-3b3f-409e-80cb-25e7992e06f1",
        "name": "UpdateUserByID",
        "request": {
          "url": {
            "path": [
              "public",
              "v2",
              "users",
              "{{user_id}}"
            ],
            "host": [
              "{{baseURL}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "{{tokenID}}"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "dfb544aa-7763-4db3-a843-3fe57b701042",
              "type": "text/javascript",
              "packages": {},
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "pm.test(\"Is user status updated\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                "});"
              ],
              "_lastExecutionId": "7dbc0c8a-0585-471a-a3ee-1a0fdc186fbc"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "acca90e2-bf4c-44bf-9171-f2dbfac6be87",
      "name": "DataDrivernAPIs",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2025-03-23T06:26:39.801Z",
      "postman_exported_using": "Postman/11.37.5"
    },
    "id": "456d3732-a008-46bb-8240-05e9390bc93c",
    "name": "GoRestEnv",
    "values": [
      {
        "type": "any",
        "value": "https://gorest.co.in",
        "key": "baseURL"
      },
      {
        "type": "any",
        "value": "Bearer e5fb405b45a215976b22601795ed1dd69c1e83d530d3b0bb18cf681346867410",
        "key": "tokenID"
      }
    ]
  },
  "globals": {
    "id": "8476abc5-1d43-44a3-810c-d417cec82d3e",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 521.3333333333334,
      "responseMin": 397,
      "responseMax": 1102,
      "responseSd": 259.88181074395254,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1743805499526,
      "completed": 1743805502890
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 2,
          "cycles": 3,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "eb6319e8-2cd6-4d62-b41a-0a646fe97937",
          "httpRequestId": "127771d7-26b7-4f2e-9615-b2e70c5c9a3e"
        },
        "item": {
          "id": "7d759b01-a542-4447-9556-27d9b735361c",
          "name": "CreateUserWithTestData",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \r\n    //name,status and gender are coming from csv file(myuser.csv)\r\n    \r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28123e20-d0d7-4a3b-a8c4-2d8ac905f87b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "//assertions\r",
                  "pm.test(\"Check user response data\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));// here we used data variable\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "\r",
                  "    //fetch the email\r",
                  "    const rawBody= pm.request.body.raw;//json string\r",
                  "\r",
                  "    //convert json to javascript object\r",
                  "    const requestBody= JSON.parse(rawBody);\r",
                  "    const email=requestBody.email;\r",
                  "    console.log(\"expected email==>\" + email);\r",
                  "    pm.expect(jsonData.email).to.eql(email);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "const response=pm.response.json();\r",
                  "const userID=response.id;\r",
                  "pm.variables.set(\"user_id\",userID);\r",
                  ""
                ],
                "_lastExecutionId": "71b7a9f9-6563-447d-853d-f7dbe5a728c8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e5fb405b45a215976b22601795ed1dd69c1e83d530d3b0bb18cf681346867410"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8613d58d-40dc-4ac4-b523-991a5fa32e74",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "135",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \r\n    \n    \r\n    \"name\": \"Ranjit\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Miles.Emmerich@yahoo.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "46a26966-01ff-4b66-a4c9-b2eb533bab6b",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Fri, 04 Apr 2025 22:25:01 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "101"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"2788b2e32c2a48cadba5b1e7823a344d\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/7813852"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "84"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "1"
            },
            {
              "key": "x-request-id",
              "value": "79519997-7ac9-45d9-8d20-356d0b300276"
            },
            {
              "key": "x-runtime",
              "value": "0.082711"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=6L3OsLqj6r%2Fgwg9f4Yw%2FQ2PwQSaAbzd6bMFLHtt0Gl9V%2B2FW1gp%2Flj4dJghxk6eyxtHVRp6yyCqSOtDQ7EuMbgs1stgMrh3iu6VvMvbJk8SUMq0mPXhE19ETQJLsxWY%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92b4381a0b636c6f-DFW"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=11414&min_rtt=7732&rtt_var=5529&sent=4&recv=5&lost=0&retrans=0&sent_bytes=2827&recv_bytes=988&delivery_rate=377651&cwnd=246&unsent_bytes=0&cid=a461020f107523b0&ts=952&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              51,
              56,
              53,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              97,
              110,
              106,
              105,
              116,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              105,
              108,
              101,
              115,
              46,
              69,
              109,
              109,
              101,
              114,
              105,
              99,
              104,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 1102,
          "responseSize": 101
        },
        "id": "7d759b01-a542-4447-9556-27d9b735361c",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0191fb51-1ed9-496f-8174-4682d710e7b5",
          "length": 2,
          "cycles": 3,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "32fa2ddb-56c2-49a9-8770-8130506315c7"
        },
        "item": {
          "id": "37b71ada-3b3f-409e-80cb-25e7992e06f1",
          "name": "UpdateUserByID",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{user_id}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dfb544aa-7763-4db3-a843-3fe57b701042",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "7dbc0c8a-0585-471a-a3ee-1a0fdc186fbc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7813852"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e5fb405b45a215976b22601795ed1dd69c1e83d530d3b0bb18cf681346867410"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5cdf2376-e785-487c-b48d-245ca638eacc",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "e2c236a5-90c0-4c3b-ba4d-883bd349a7c3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Fri, 04 Apr 2025 22:25:01 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "Etag",
              "value": "W/\"b0a864d6b712000c8cc3b84416cb3b14\""
            },
            {
              "key": "Feature-Policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Vary",
              "value": "Origin"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "X-Ratelimit-Limit",
              "value": "90"
            },
            {
              "key": "X-Ratelimit-Remaining",
              "value": "89"
            },
            {
              "key": "X-Ratelimit-Reset",
              "value": "2"
            },
            {
              "key": "X-Request-Id",
              "value": "8963353d-a095-4b61-9ba0-27d5568ebd40"
            },
            {
              "key": "X-Runtime",
              "value": "0.070804"
            },
            {
              "key": "X-Xss-Protection",
              "value": "0"
            },
            {
              "key": "Cf-Cache-Status",
              "value": "DYNAMIC"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92b438206b5e6c6f-DFW"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              51,
              56,
              53,
              50,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              97,
              110,
              106,
              105,
              116,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              77,
              105,
              108,
              101,
              115,
              46,
              69,
              109,
              109,
              101,
              114,
              105,
              99,
              104,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 398,
          "responseSize": 99
        },
        "id": "37b71ada-3b3f-409e-80cb-25e7992e06f1",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cc5f20b4-fa46-4352-b971-4a82fb886153",
          "length": 2,
          "cycles": 3,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "37c335fc-8d81-458b-96b9-870d5f5269ad"
        },
        "item": {
          "id": "7d759b01-a542-4447-9556-27d9b735361c",
          "name": "CreateUserWithTestData",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \r\n    //name,status and gender are coming from csv file(myuser.csv)\r\n    \r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28123e20-d0d7-4a3b-a8c4-2d8ac905f87b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "//assertions\r",
                  "pm.test(\"Check user response data\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));// here we used data variable\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "\r",
                  "    //fetch the email\r",
                  "    const rawBody= pm.request.body.raw;//json string\r",
                  "\r",
                  "    //convert json to javascript object\r",
                  "    const requestBody= JSON.parse(rawBody);\r",
                  "    const email=requestBody.email;\r",
                  "    console.log(\"expected email==>\" + email);\r",
                  "    pm.expect(jsonData.email).to.eql(email);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "const response=pm.response.json();\r",
                  "const userID=response.id;\r",
                  "pm.variables.set(\"user_id\",userID);\r",
                  ""
                ],
                "_lastExecutionId": "71b7a9f9-6563-447d-853d-f7dbe5a728c8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e5fb405b45a215976b22601795ed1dd69c1e83d530d3b0bb18cf681346867410"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "22fbde71-4114-46d7-bc0c-d7ece4a0948a",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "136",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \r\n    \n    \r\n    \"name\": \"Concan\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Desiree.Stracke@yahoo.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "72092a26-db4f-4900-ba1d-3133af096344",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Fri, 04 Apr 2025 22:25:02 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "102"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"f9cda6a7f3a17ef643d34381638b93f0\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/7813853"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "88"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "2"
            },
            {
              "key": "x-request-id",
              "value": "e25fb12e-65ac-4883-b187-1ecefa5a5768"
            },
            {
              "key": "x-runtime",
              "value": "0.082710"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=KTdMlk7qoWvjqAxY%2Bi0g1PEsL%2BzXSM42rPivmNRArncdX9cmESzK6d1dbn512uywuPjRsN0JilXiXIId4hnIJwh9XsdvjgYuIXvJ6n7gdEDX6qPNH6LK1RcgECUs0cY%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92b438231ed16c6f-DFW"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=11617&min_rtt=7732&rtt_var=3508&sent=11&recv=9&lost=0&retrans=0&sent_bytes=5811&recv_bytes=1964&delivery_rate=379286&cwnd=251&unsent_bytes=0&cid=a461020f107523b0&ts=1857&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              51,
              56,
              53,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              111,
              110,
              99,
              97,
              110,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              68,
              101,
              115,
              105,
              114,
              101,
              101,
              46,
              83,
              116,
              114,
              97,
              99,
              107,
              101,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 397,
          "responseSize": 102
        },
        "id": "7d759b01-a542-4447-9556-27d9b735361c",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "68d10edf-1f9c-4c1f-95b0-50ec430be3cc",
          "length": 2,
          "cycles": 3,
          "position": 1,
          "iteration": 1,
          "httpRequestId": "fbdb8296-71e1-46e1-b6b9-095a46808fa6"
        },
        "item": {
          "id": "37b71ada-3b3f-409e-80cb-25e7992e06f1",
          "name": "UpdateUserByID",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{user_id}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dfb544aa-7763-4db3-a843-3fe57b701042",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "7dbc0c8a-0585-471a-a3ee-1a0fdc186fbc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7813853"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e5fb405b45a215976b22601795ed1dd69c1e83d530d3b0bb18cf681346867410"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e345b78b-b07c-403f-bc3e-0c8f61532714",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "12bc5588-ab14-4c50-be3b-4e40e7b1e887",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Fri, 04 Apr 2025 22:25:02 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"c14e36e49047dfcf87c6782f364f14af\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "87"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "3"
            },
            {
              "key": "x-request-id",
              "value": "4dbf2653-fb84-4554-9fd1-20f70c72244f"
            },
            {
              "key": "x-runtime",
              "value": "0.086109"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=gTL3FSjFNdbKzBltXbulExmYF5r%2BtkX3trY2w6uXC2oRE%2BX4Ujw1cUPxn6lRHglV2tpx%2B0LPeV1TSkEPufRPfQj%2FGjOu6jJ6SK%2Fn9%2FzbhwhPRUJnd5bl2SNh15%2BJOj8%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92b43825da706c6f-DFW"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=11059&min_rtt=7090&rtt_var=3538&sent=14&recv=11&lost=0&retrans=0&sent_bytes=7364&recv_bytes=2401&delivery_rate=408163&cwnd=251&unsent_bytes=0&cid=a461020f107523b0&ts=2302&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              51,
              56,
              53,
              51,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              67,
              111,
              110,
              99,
              97,
              110,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              68,
              101,
              115,
              105,
              114,
              101,
              101,
              46,
              83,
              116,
              114,
              97,
              99,
              107,
              101,
              64,
              121,
              97,
              104,
              111,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 404,
          "responseSize": 100
        },
        "id": "37b71ada-3b3f-409e-80cb-25e7992e06f1",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "726a3ee0-d3c2-4fc8-aaf9-9fea6d119c3c",
          "length": 2,
          "cycles": 3,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "a5ace11e-74ac-476e-999b-e2a20312f289"
        },
        "item": {
          "id": "7d759b01-a542-4447-9556-27d9b735361c",
          "name": "CreateUserWithTestData",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \r\n    //name,status and gender are coming from csv file(myuser.csv)\r\n    \r\n    \"name\": \"{{name}}\",\r\n    \"gender\": \"{{gender}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"{{status}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28123e20-d0d7-4a3b-a8c4-2d8ac905f87b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "//assertions\r",
                  "pm.test(\"Check user response data\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.name).to.eql(pm.iterationData.get(\"name\"));// here we used data variable\r",
                  "    pm.expect(jsonData.gender).to.eql(pm.iterationData.get(\"gender\"));\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"status\"));\r",
                  "\r",
                  "    //fetch the email\r",
                  "    const rawBody= pm.request.body.raw;//json string\r",
                  "\r",
                  "    //convert json to javascript object\r",
                  "    const requestBody= JSON.parse(rawBody);\r",
                  "    const email=requestBody.email;\r",
                  "    console.log(\"expected email==>\" + email);\r",
                  "    pm.expect(jsonData.email).to.eql(email);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "const response=pm.response.json();\r",
                  "const userID=response.id;\r",
                  "pm.variables.set(\"user_id\",userID);\r",
                  ""
                ],
                "_lastExecutionId": "71b7a9f9-6563-447d-853d-f7dbe5a728c8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e5fb405b45a215976b22601795ed1dd69c1e83d530d3b0bb18cf681346867410"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c85e0ed9-cf36-4636-a970-45acdfefa446",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "131",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \r\n    \n    \r\n    \"name\": \"Ronak\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"Gavin_Stehr@gmail.com\",\r\n    \"status\": \"inactive\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "1f3af63b-c911-4341-82f5-91c6ec84e50d",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Fri, 04 Apr 2025 22:25:03 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "97"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"cee768283ff32e1aa7d493383279b44c\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "location",
              "value": "https://gorest.co.in/public/v2/users/7813854"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "86"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "4"
            },
            {
              "key": "x-request-id",
              "value": "617adfeb-04f9-426c-8545-da12b74efaa6"
            },
            {
              "key": "x-runtime",
              "value": "0.114847"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=cJp%2Fi%2BHoGw03Lkx6Zao%2FNBGnRlz9oD%2FfhOMHdzmKIG1xLIJOjVrlbutzpZaaGfAY8QmbYgnx6sDK4IQa6X41bXjMx%2Fv%2FipRvBZc9J2klZlrt6Y1FH6p4Q%2BCIW8ZaEzQ%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92b438288e1c6c6f-DFW"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=10493&min_rtt=6465&rtt_var=3569&sent=17&recv=13&lost=0&retrans=0&sent_bytes=8915&recv_bytes=2935&delivery_rate=447098&cwnd=251&unsent_bytes=0&cid=a461020f107523b0&ts=2756&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              51,
              56,
              53,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              111,
              110,
              97,
              107,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              71,
              97,
              118,
              105,
              110,
              95,
              83,
              116,
              101,
              104,
              114,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              44,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              105,
              110,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 427,
          "responseSize": 97
        },
        "id": "7d759b01-a542-4447-9556-27d9b735361c",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Check user response data",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ffea12e8-a348-47b7-a4d1-95eee716b1a4",
          "length": 2,
          "cycles": 3,
          "position": 1,
          "iteration": 2,
          "httpRequestId": "14f65ecb-7ea0-4bc9-b588-d6072842af54"
        },
        "item": {
          "id": "37b71ada-3b3f-409e-80cb-25e7992e06f1",
          "name": "UpdateUserByID",
          "request": {
            "url": {
              "path": [
                "public",
                "v2",
                "users",
                "{{user_id}}"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "{{tokenID}}"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"status\": \"{{newstatus}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "dfb544aa-7763-4db3-a843-3fe57b701042",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Is user status updated\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"newstatus\"));\r",
                  "});"
                ],
                "_lastExecutionId": "7dbc0c8a-0585-471a-a3ee-1a0fdc186fbc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "public",
              "v2",
              "users",
              "7813854"
            ],
            "host": [
              "gorest",
              "co",
              "in"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer e5fb405b45a215976b22601795ed1dd69c1e83d530d3b0bb18cf681346867410"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2d622107-2e4b-4310-a34b-c27c7d106897",
              "system": true
            },
            {
              "key": "Host",
              "value": "gorest.co.in",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "28",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"status\": \"active\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "fd3cd2b8-5850-46f8-9db1-20b5e0519069",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Fri, 04 Apr 2025 22:25:03 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Cache-Control",
              "value": "max-age=0, private, must-revalidate"
            },
            {
              "key": "etag",
              "value": "W/\"bad00438a868781b65c88961f102a525\""
            },
            {
              "key": "feature-policy",
              "value": "camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'"
            },
            {
              "key": "referrer-policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "vary",
              "value": "Origin"
            },
            {
              "key": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "key": "x-download-options",
              "value": "noopen"
            },
            {
              "key": "x-frame-options",
              "value": "SAMEORIGIN"
            },
            {
              "key": "x-permitted-cross-domain-policies",
              "value": "none"
            },
            {
              "key": "x-ratelimit-limit",
              "value": "90"
            },
            {
              "key": "x-ratelimit-remaining",
              "value": "85"
            },
            {
              "key": "x-ratelimit-reset",
              "value": "4"
            },
            {
              "key": "x-request-id",
              "value": "bd976fb6-a23d-4774-b02e-399c68bf11c5"
            },
            {
              "key": "x-runtime",
              "value": "0.074850"
            },
            {
              "key": "x-xss-protection",
              "value": "0"
            },
            {
              "key": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "key": "Report-To",
              "value": "{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=0vJ3ygAK3vEvLLT3df9G3FUprVJGaWnhfj8hkV9GOgdMBjRDJS3yGZaM7vRbAm%2BRz%2BDAKiv9Ho0YZ%2F34TCkV5Nhlr1RjUyFrqilAPD3RUcJntmQdz24xddFZWo%2B9qrQ%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "NEL",
              "value": "{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}"
            },
            {
              "key": "Server",
              "value": "cloudflare"
            },
            {
              "key": "CF-RAY",
              "value": "92b4382b69d26c6f-DFW"
            },
            {
              "key": "Content-Encoding",
              "value": "br"
            },
            {
              "key": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            },
            {
              "key": "server-timing",
              "value": "cfL4;desc=\"?proto=TCP&rtt=10612&min_rtt=6465&rtt_var=2914&sent=20&recv=15&lost=0&retrans=0&sent_bytes=10473&recv_bytes=3372&delivery_rate=447098&cwnd=251&unsent_bytes=0&cid=a461020f107523b0&ts=3182&x=0\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              34,
              44,
              34,
              105,
              100,
              34,
              58,
              55,
              56,
              49,
              51,
              56,
              53,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              82,
              111,
              110,
              97,
              107,
              34,
              44,
              34,
              101,
              109,
              97,
              105,
              108,
              34,
              58,
              34,
              71,
              97,
              118,
              105,
              110,
              95,
              83,
              116,
              101,
              104,
              114,
              64,
              103,
              109,
              97,
              105,
              108,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              103,
              101,
              110,
              100,
              101,
              114,
              34,
              58,
              34,
              109,
              97,
              108,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 400,
          "responseSize": 95
        },
        "id": "37b71ada-3b3f-409e-80cb-25e7992e06f1",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Is user status updated",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 594
    },
    "failures": [],
    "error": null
  }
}